/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.itenas.oop.project.component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.itenas.oop.project.connection.ConnectionManager;
/**
 *
 * @author aryan
 */
public class MelihatDaftarAdmin extends javax.swing.JPanel {

    /**
     * Creates new form KelolaMagangForm
     */
    public MelihatDaftarAdmin() {
        initComponents();
        TableDataAdmin();
        
        txtSearchNamaAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                    cariTableDataAdmin(txtSearchNamaAdmin.getText());
                }
            }
        });
    }
    
    private void TableDataAdmin() {
    ConnectionManager conMan = new ConnectionManager();
    Connection conn = conMan.connectDb();
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Nama");
    model.addColumn("Username");
    tableAdmin.setModel(model);

    try {
        Statement stmt = conn.createStatement();
        String query = "SELECT nama, username FROM daftar_akun WHERE jenis_akun = 'Admin'";
        ResultSet rs = stmt.executeQuery(query);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("nama"), 
                rs.getString("username"), 
            });
        }

        tableAdmin.setModel(model); 
        conMan.disconnectDb(conn);
    } catch (SQLException ex) {
        System.out.println("Error: " + ex.getMessage());
    }
}
    
    private void cariTableDataAdmin(String namaAdmin) {
    ConnectionManager conMan = new ConnectionManager();
    Connection conn = conMan.connectDb();
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Nama");
    model.addColumn("Username");
    tableAdmin.setModel(model);
    boolean hasil = false;

    try {
        Statement stmt = conn.createStatement();
        String query = "SELECT nama, username FROM daftar_akun WHERE jenis_akun = 'Admin' AND nama LIKE '%" + namaAdmin + "%'"; 
        ResultSet rs = stmt.executeQuery(query);

        while (rs.next()) {
            hasil = true;
            model.addRow(new Object[]{
                rs.getString("nama"),
                rs.getString("username"), 
            });
        }
        if (!hasil) {
            JOptionPane.showMessageDialog(this, "Nama Admin tidak ditemukan!", "Pencarian Tidak Ditemukan", JOptionPane.INFORMATION_MESSAGE);
        }
        
        tableAdmin.setModel(model); 
        conMan.disconnectDb(conn);
    } catch (SQLException ex) {
        System.out.println("Error: " + ex.getMessage());
    }
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAdmin = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        txtKembali = new javax.swing.JLabel();
        txtSearchNamaAdmin = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(239, 236, 229));

        jPanel1.setBackground(new java.awt.Color(226, 241, 231));

        tableAdmin.setBackground(new java.awt.Color(46, 80, 119));
        tableAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAdminMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAdmin);

        btnHapus.setBackground(new java.awt.Color(184, 0, 31));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setMaximumSize(new java.awt.Dimension(41, 16));
        btnHapus.setMinimumSize(new java.awt.Dimension(41, 16));
        btnHapus.setPreferredSize(new java.awt.Dimension(41, 16));
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        txtKembali.setForeground(new java.awt.Color(0, 0, 0));
        txtKembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtKembaliMouseClicked(evt);
            }
        });

        txtSearchNamaAdmin.setBackground(new java.awt.Color(239, 239, 239));
        txtSearchNamaAdmin.setForeground(new java.awt.Color(51, 51, 51));
        txtSearchNamaAdmin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(191, 191, 191), 1, true));
        txtSearchNamaAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchNamaAdminActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(153, 153, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Search");
        btnSearch.setBorder(null);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtKembali)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 89, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtSearchNamaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(232, 232, 232)))
                        .addGap(71, 71, 71))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchNamaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addComponent(txtKembali))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAdminMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tableAdminMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int pilihBaris = tableAdmin.getSelectedRow();
        if (pilihBaris == -1) {
            JOptionPane.showMessageDialog(btnHapus, "Harap pilih data untuk dihapus!","Warning",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String username = tableAdmin.getValueAt(pilihBaris, 1).toString();

        int konfirmasi = JOptionPane.showConfirmDialog(this,"Apakah Anda yakin ingin menghapus admin dengan username: " + username + "?",
            "Konfirmasi Hapus",JOptionPane.YES_NO_OPTION);

        if (konfirmasi == javax.swing.JOptionPane.YES_OPTION) {
            ConnectionManager conMan = new ConnectionManager();
            Connection conn = conMan.connectDb();
            try {
                Statement stmt = conn.createStatement();
                String query = "DELETE FROM daftar_akun WHERE username = '" + username + "'";
                int barisHapus = stmt.executeUpdate(query);

                if (barisHapus > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus.");
                }
            } catch (SQLException ex) {
                System.out.println("Error: " + ex.getMessage());
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.");
            } finally {
                conMan.disconnectDb(conn);
            }
            TableDataAdmin();
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtKembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtKembaliMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKembaliMouseClicked

    private void txtSearchNamaAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchNamaAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchNamaAdminActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
        String namaAdmin = txtSearchNamaAdmin.getText();
        if (namaAdmin.isEmpty()) {
            cariTableDataAdmin(""); 
        } else {
            cariTableDataAdmin(namaAdmin);  
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Nama Admin yang anda masukan tidak ada " + ex.getMessage());
    }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAdmin;
    private javax.swing.JLabel txtKembali;
    private javax.swing.JTextField txtSearchNamaAdmin;
    // End of variables declaration//GEN-END:variables
}
